version: 0.2

env:
    shell: bash
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - docker login -u $DOCKER_USER -p $DOCKER_ACCESS_TOKEN
      - aws --version
      - ACCOUNT_ID=${CODEBUILD_BUILD_ARN} && IFS=':' && set -- $ACCOUNT_ID && ACCOUNT_ID=$5
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/privado-core
      - CODE_ARTIFACT_URL=https://privado-$ACCOUNT_ID.d.codeartifact.$AWS_REGION.amazonaws.com/maven/core/
      - CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain privado --domain-owner $ACCOUNT_ID --query authorizationToken --output text)
      - VERSION=$VERSION_INITIAL.$CODEBUILD_BUILD_NUMBER
      - TAG_1=latest
      - TAG_2=$VERSION
      - echo $CODEBUILD_WEBHOOK_HEAD_REF
      - TAG_3=${CODEBUILD_WEBHOOK_HEAD_REF##*/}

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest --build-arg VERSION=$VERSION --build-arg CODE_ARTIFACT_URL=$CODE_ARTIFACT_URL --build-arg CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$TAG_1
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$TAG_2
  post_build:
    commands:
      - echo Build completed on `date`
      - echo "Removing older <untagged> images"
      - IMAGES_TO_DELETE=$(aws ecr list-images --region $AWS_REGION --repository-name privado-core --filter "tagStatus=UNTAGGED" --query 'imageIds[*]' --max-items 100 --output json)
      - echo "$IMAGES_TO_DELETE"
      - aws ecr batch-delete-image --region $AWS_REGION --repository-name privado-core --image-ids "$IMAGES_TO_DELETE" || true
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$TAG_1
      - docker push $REPOSITORY_URI:$TAG_2
      - |
        if [[ -z "$TAG_3" ]]
        then
              echo "\$TAG_3 is empty"
        else
              docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$TAG_3
              docker push $REPOSITORY_URI:$TAG_3
        fi
      - echo completed pushing image to ecr
